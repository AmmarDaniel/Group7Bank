/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package javaapplication2;
import java.util.Scanner;
/**
 *
 * @author BOSS
 */
class Benk {
    private String ID;
    private String name;
    private long balance;
    
    Scanner sc = new Scanner(System.in);
    
    //Method for Sign Up interface
    void signUp() {
        System.out.println("Enter your account ID: ");
        ID = sc.nextLine();
        System.out.println("Enter your name: ");
        name = sc.nextLine();
        System.out.println("Enter your account balance: ");
        balance = sc.nextLong();
    }
    
    void selection() {  //Method for Main Menu interface
        System.out.println("Please choose an option:\n1. Display Account Info\n2. Update Account\n3. Deposit Money\n4. Withdraw money\n5. Delete Account\n6. Exit");
    }
        
    //Method for Update Account interface
    void updateAccount() {
        System.out.println("");
        ID = sc.nextLine();
        System.out.println("Enter New Account ID: ");
        ID = sc.nextLine();
        System.out.println("Enter New Name: ");
        name = sc.nextLine();
        System.out.println("Enter New Balance: ");
        balance = sc.nextLong();
    }
        
    //Method for Deposit Money
    void depositMoney() {
        System.out.println("Enter Amount to Deposit: ");
        long amt = sc.nextLong();
        balance = balance + amt;    //Update the new balance
        System.out.println("Your Deposit Was Successful");
    }
        
    //Method for Withdraw Money
    void withdrawMoney() {
        long amt;
        System.out.println("Enter Amount to Withdraw: ");
        amt = sc.nextLong();
        if (balance >= amt) {   //Checks if user input exceeds the balance
            balance = balance - amt;    //Update the new balance
            System.out.println("Your Withdraw Was Successful");
        } else {
            System.out.println("Insufficient Balance..Transaction Failed..");
        }
    }
        
    //Method for Display Account Information
    void display() {
        System.out.println("ID: " + ID + "\nName: " + name + "\nBalance: RM" + balance);
    }
        
    //Method for Account Deletion
    void deleteAccount() {
        ID = "[DELETED]";
        name = "[DELETED]";
        balance = 0;
    }
    
    boolean search(String acn) {
        if (ID.equals(acn)) {
            display();
            return (true);
        }
        return (false);
    }
}

public class Bank {

    /**
     *
     * @param args
     */
    public static void main(String[] args) {
        System.out.println("Welcome to Bank X!"); // leaving the name as bank X for now, we all can discuss on a name later
        System.out.println("How Many Accounts Would You Like to Create?");
        Scanner sc = new Scanner(System.in);
        int ch = sc.nextInt();
        Benk C[] = new Benk[ch];
        for (int i = 0; i < C.length; i++) {
            C[i] = new Benk();
            C[i].signUp();
        }
        
        //Loop until option 6 is entered
        int option;
        do{
            C[0].selection();
            option = sc.nextInt();
            switch (option) {
                case 1:
                    for (int i = 0; i < C.length; i++){
                        C[i].display();
                    }
                    break;
                case 2:
                    System.out.print("Enter Account ID: ");
                        String acn = sc.next();
                        boolean found = false;
                        try{
                            for (int i = 0; i < C.length; i++) {
                                found = C[i].search(acn);
                                if (found) {
                                    C[i].updateAccount();
                                    break;
                                }
                            }
                            if (!found) {
                                System.out.println("Search Failed..Account Not Exist..");
                            }
                        } catch (Exception e){
                            System.out.println("Search Failed..Account Not Exist..");
                        }
                    break;
                case 3:
                    System.out.print("Enter Account ID: ");
                        acn = sc.next();
                        found = false;
                        try{
                        for (int i = 0; i < C.length; i++) {
                            found = C[i].search(acn);
                            if (found) {
                                C[i].depositMoney();
                                break;
                            }
                        }
                        if (!found) {
                            System.out.println("Search Failed..Account Not Exist..");
                        }
                        } catch (Exception e){
                            System.out.println("Search Failed..Account Not Exist..");
                        }
                    break;
                case 4:
                    System.out.print("Enter Account ID: ");
                        acn = sc.next();
                        found = false;
                        try{
                        for (int i = 0; i < C.length; i++) {
                            found = C[i].search(acn);
                            if (found) {
                                C[i].withdrawMoney();
                                break;
                            }
                        }
                        if (!found) {
                            System.out.println("Search Failed..Account Not Exist..");
                        }
                        } catch (Exception e){
                            System.out.println("Search Failed..Account Not Exist..");
                        }
                    break;
                case 5:
                    System.out.print("Enter Account ID to Delete: ");
                    acn = sc.next();
                    found = false;
                    try{
                    for (int i = 0; i < C.length; i++) {
                        found = C[i].search(acn);
                        if (found) {
                            System.out.println("You chose the option to delete your account. Are you sure? (Y/N)\n");
                            char yn = sc.next().charAt(0);
                            switch (yn) {   //Ask user for Confirmation
                                case 'Y':
                                    C[i].deleteAccount();
                                    System.out.println("You have deleted the account.");
                                    break;
                                case 'N':
                                    System.out.println("You canceled to delete the account.");
                                    break;
                                default:
                                    System.out.println("Invalid option.");
                                    break;
                            }
                        }
                    }
                    if (!found) {
                        System.out.println("Search Failed..Account Not Exist..");
                    }
                    } catch (Exception e){
                            System.out.println("Search Failed..Account Not Exist..");
                        }
                    break;
                case 6:
                    System.out.println("Thank You for Using Bank X!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid option.");
                    break;
                }
        }while(option != 6);
    }
}
